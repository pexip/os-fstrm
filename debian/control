Source: fstrm
Section: libs
Priority: optional
Maintainer: Pexip AS <packaging@pexip.com>
XSBC-Pexip-Original-Maintainer: Robert Edmonds <edmonds@debian.org>
Build-Depends:
 , debhelper-compat (= 13)
 , pkg-config
 , libevent-dev
Standards-Version: 4.6.0
Homepage: https://github.com/farsightsec/fstrm
Vcs-Browser: https://salsa.debian.org/edmonds/fstrm
Vcs-Git: https://salsa.debian.org/edmonds/fstrm.git
XS-Pexip-Upstream: http://deb.debian.org/debian/ bookworm

Package: libfstrm0
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Pre-Depends: ${misc:Pre-Depends}
Multi-Arch: same
Description: Frame Streams (fstrm) library
 Frame Streams is a light weight, binary clean protocol that allows for the
 transport of arbitrarily encoded data payload sequences with minimal framing
 overhead -- just four bytes per data frame. Frame Streams does not specify an
 encoding format for data frames and can be used with any data serialization
 format that produces byte sequences, such as Protocol Buffers, XML, JSON,
 MessagePack, YAML, etc. Frame Streams can be used as both a streaming
 transport over a reliable byte stream socket (TCP sockets, TLS connections,
 AF_UNIX sockets, etc.) for data in motion as well as a file format for data
 at rest. A "Content Type" header identifies the type of payload being carried
 over an individual Frame Stream and allows cooperating programs to determine
 how to interpret a given sequence of data payloads.
 .
 This is the "fstrm" implementation of Frame Streams in C.
 .
 This package contains the shared library.

Package: libfstrm-dev
Section: libdevel
Architecture: any
Depends: ${misc:Depends}, libfstrm0 (= ${binary:Version})
Multi-Arch: same
Description: Frame Streams (fstrm) library (development files)
 Frame Streams is a light weight, binary clean protocol that allows for the
 transport of arbitrarily encoded data payload sequences with minimal framing
 overhead -- just four bytes per data frame. Frame Streams does not specify an
 encoding format for data frames and can be used with any data serialization
 format that produces byte sequences, such as Protocol Buffers, XML, JSON,
 MessagePack, YAML, etc. Frame Streams can be used as both a streaming
 transport over a reliable byte stream socket (TCP sockets, TLS connections,
 AF_UNIX sockets, etc.) for data in motion as well as a file format for data
 at rest. A "Content Type" header identifies the type of payload being carried
 over an individual Frame Stream and allows cooperating programs to determine
 how to interpret a given sequence of data payloads.
 .
 This is the "fstrm" implementation of Frame Streams in C.
 .
 This package contains the static library and development headers.

Package: fstrm-bin
Section: utils
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Description: Frame Streams (fstrm) library (utilities)
 Frame Streams is a light weight, binary clean protocol that allows for the
 transport of arbitrarily encoded data payload sequences with minimal framing
 overhead -- just four bytes per data frame. Frame Streams does not specify an
 encoding format for data frames and can be used with any data serialization
 format that produces byte sequences, such as Protocol Buffers, XML, JSON,
 MessagePack, YAML, etc. Frame Streams can be used as both a streaming
 transport over a reliable byte stream socket (TCP sockets, TLS connections,
 AF_UNIX sockets, etc.) for data in motion as well as a file format for data
 at rest. A "Content Type" header identifies the type of payload being carried
 over an individual Frame Stream and allows cooperating programs to determine
 how to interpret a given sequence of data payloads.
 .
 This is the "fstrm" implementation of Frame Streams in C.
 .
 This package contains the command line utilities.
